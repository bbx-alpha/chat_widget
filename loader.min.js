document.addEventListener('DOMContentLoaded', function () {
    console.log("Script started executing...");
    (function waitForChatWidget() {
        console.log('Polling for chat widget...');
        var form = document.getElementById("chat-form");
        var chatWidget = document.getElementById("custom-chat-widget");
        var toggleButton = document.getElementById("chat-toggle-button");
        var closeButton = document.getElementById("chat-close-button");
        var responseMessage = document.getElementById("chat-response-message");
        var clearUserDataButton = document.getElementById("clear-user-data");
    
        // If all elements are available, initialize the widget
        if (form && chatWidget && toggleButton && closeButton && responseMessage && clearUserDataButton) {
            console.log('All chat widget elements are found. Initializing chat widget...');
            initializeChatWidget();  // Proceed to widget initialization
        } else {
            // If any element is not found, poll again after 100ms
            console.warn('Some chat widget elements are missing. Trying again...');
            setTimeout(waitForChatWidget, 100);
        }
    })();
    
    // Define the widget initialization function
    function initializeChatWidget() {
        console.log("Starting chat widget initialization...");
    
        var form = document.getElementById("chat-form");
        var chatWidget = document.getElementById("custom-chat-widget");
        var toggleButton = document.getElementById("chat-toggle-button");
        var closeButton = document.getElementById("chat-close-button");
        var responseMessage = document.getElementById("chat-response-message");
        var clearUserDataButton = document.getElementById("clear-user-data");
    
        // Load user data from local storage if available
        function loadUserData() {
            try {
                const savedName = localStorage.getItem("chatName");
                const savedEmail = localStorage.getItem("chatEmail");
                const savedPhone = localStorage.getItem("chatPhone");
                if (savedName || savedEmail || savedPhone) {
                    clearUserDataButton.style.display = "block"; // Show "Forget Me" button if data exists
                } else {
                    clearUserDataButton.style.display = "none"; // Hide "Forget Me" button if no data
                }
                if (savedName) {
                    document.getElementById("name").value = savedName;
                }
                if (savedEmail) {
                    document.getElementById("email").value = savedEmail;
                }
                if (savedPhone) {
                    document.getElementById("phone").value = savedPhone;
                }
            } catch (error) {
                console.error("Error loading data from local storage: ", error);
            }
        }
    
        // Save user data to local storage
        function saveUserData() {
            try {
                const name = document.getElementById("name").value;
                const email = document.getElementById("email").value;
                const phone = document.getElementById("phone").value;
    
                localStorage.setItem("chatName", name);
                localStorage.setItem("chatEmail", email);
                localStorage.setItem("chatPhone", phone);
            } catch (error) {
                console.error("Error saving data to local storage: ", error);
            }
        }
    
        // Toggle the chat widget display
        toggleButton.addEventListener("click", function () {
            if (chatWidget.style.display === "none" || !chatWidget.classList.contains("open")) {
                chatWidget.style.display = "flex";
                setTimeout(function () {
                    chatWidget.classList.add("open");
                }, 10); // Delay to allow transition
                loadUserData(); // Load user data when the widget is opened
            } else {
                closeChatWidget();
            }
            responseMessage.style.display = "none"; // Hide response message when reopening
        });
    
        // Close button click handler
        closeButton.addEventListener("click", closeChatWidget);
    
        function closeChatWidget() {
            chatWidget.classList.remove("open");
            setTimeout(() => {
                chatWidget.style.display = "none";
            }, 300);
        }
    
        // Close widget if clicked outside
        document.addEventListener("click", function (e) {
            if (!chatWidget.contains(e.target) && !toggleButton.contains(e.target)) {
                if (chatWidget.classList.contains("open")) {
                    closeChatWidget();
                }
            }
        });
    
        // Form submission handling
        var isSubmitting = false;
        form.addEventListener("submit", function (e) {
            e.preventDefault();
            if (isSubmitting) return;
    
            var name = document.getElementById("name").value;
            var email = document.getElementById("email").value;
            var phone = document.getElementById("phone").value;
            var message = document.getElementById("message").value;
    
            if (!validateFormData(name, email, phone, message)) {
                return; // Abort submission if validation fails
            }
    
            isSubmitting = true;
            var submitButton = document.getElementById("submit-button");
            submitButton.disabled = true;
            submitButton.textContent = "Sending...";
    
            // Webhook URL
            var webhookURL = "https://broad-hall-5e51.krathaur.workers.dev/";
    
            // Send data to webhook
            fetch(webhookURL, {
                method: "POST",
                headers: {
                    "Content-Type": "application/json",
                },
                body: JSON.stringify({ name: name, email: email, phone: phone, message: message })
            })
                .then(function (response) {
                    if (response.ok) {
                        responseMessage.textContent = "Thank you! Your message has been sent.";
                        responseMessage.className = "success";
                        saveUserData(); // Save user data to local storage
                        form.reset();
                    } else {
                        responseMessage.textContent = "There was an error submitting your message. Please try again.";
                        responseMessage.className = "error";
                    }
                })
                .catch(function (error) {
                    console.error("Error:", error);
                    responseMessage.textContent = "An error occurred. Please try again.";
                    responseMessage.className = "error";
                })
                .finally(function () {
                    submitButton.disabled = false;
                    submitButton.textContent = "Send Message";
                    responseMessage.style.display = "block";
                    isSubmitting = false;
                });
        });
    
        // Form validation function
        function validateFormData(name, email, phone, message) {
            const emailPattern = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
            const phonePattern = /^\+?[0-9\s\-\(\)]{7,}$/;
    
            if (!name.trim()) {
                responseMessage.textContent = "Please enter your name.";
                responseMessage.className = "error";
                responseMessage.style.display = "block";
                return false;
            }
            if (!emailPattern.test(email)) {
                responseMessage.textContent = "Please enter a valid email address.";
                responseMessage.className = "error";
                responseMessage.style.display = "block";
                return false;
            }
            if (phone && !phonePattern.test(phone)) {
                responseMessage.textContent = "Please enter a valid phone number.";
                responseMessage.className = "error";
                responseMessage.style.display = "block";
                return false;
            }
            if (!message.trim()) {
                responseMessage.textContent = "Please enter your message.";
                responseMessage.className = "error";
                responseMessage.style.display = "block";
                return false;
            }
            responseMessage.style.display = "none"; // Hide error if everything is valid
            return true;
        }
    
        // Handle Quick Reply Buttons - Only Populate the Message Textarea
        document.querySelectorAll(".quick-reply").forEach(button => {
            button.addEventListener("click", function (e) {
                e.preventDefault(); // Prevent any default behavior
                document.getElementById("message").value = this.dataset.message; // Fill the message textarea
                this.style.display = "none"; // Hide the button after clicking
            });
        });
    
        // Reset quick replies when chat is reopened
        toggleButton.addEventListener("click", function () {
            if (chatWidget.style.display === "flex") {
                document.querySelectorAll(".quick-reply").forEach(button => {
                    button.style.display = "inline-block";
                });
            }
        });
    }
});
